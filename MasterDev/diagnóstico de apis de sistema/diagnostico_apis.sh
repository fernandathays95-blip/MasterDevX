#!/bin/bash

# =======================================================
# SCRIPT DE DIAGN√ìSTICO DE API E SISTEMA PARA TERMUX
# Verifica APIs/Recursos essenciais do Android via Shell
# =======================================================

echo "--- RELAT√ìRIO DE DIAGN√ìSTICO DE API/SISTEMA (TERMUX) ---"
echo "Data/Hora: $(date)"
echo "--------------------------------------------------------"

# --- 1. VERIFICA√á√ÉO DO N√çVEL DA API (Compatibilidade de Vers√£o) ---
echo -e "\n[1] N√≠vel da API do Sistema (SDK)"
API_LEVEL=$(getprop ro.build.version.sdk)
ANDROID_VERSION=$(getprop ro.build.version.release)

if [ -z "$API_LEVEL" ]; then
    echo "  Status: ‚ùå FALHA (N√£o foi poss√≠vel ler o n√≠vel da API)"
else
    echo "  N√≠vel SDK: $API_LEVEL"
    echo "  Vers√£o Android: $ANDROID_VERSION"
    if [ "$API_LEVEL" -ge 33 ]; then
        echo "  Status: ‚úÖ Atualizado (Android 13+)"
    elif [ "$API_LEVEL" -ge 28 ]; then
        echo "  Status: ‚ö†Ô∏è Funcional (Android 9+)"
    else
        echo "  Status: üö® Desatualizado (Pode ter problemas de compatibilidade)"
    fi
fi
echo "--------------------------------------------------------"


# --- 2. TESTE DE CONECTIVIDADE DE REDE (A API mais essencial) ---
# Testa se as APIs de rede est√£o funcionando fazendo uma requisi√ß√£o externa.
echo -e "\n[2] Teste de Conectividade de Rede (Google API)"
URL_TESTE="https://www.google.com/generate_204"

# Tenta fazer uma requisi√ß√£o silenciosa e verifica o c√≥digo de retorno HTTP
if command -v curl &> /dev/null; then
    STATUS=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 $URL_TESTE)
    LATENCY=$(curl -s -o /dev/null -w "%{time_total}" --connect-timeout 5 $URL_TESTE)
    
    echo "  Endpoint Testado: $URL_TESTE"

    if [ "$STATUS" == "204" ]; then
        echo "  Status: ‚úÖ SUCESSO"
        echo "  API Web Alcan√ß√°vel (Resposta HTTP $STATUS)"
        echo "  Lat√™ncia (s): $LATENCY"
    elif [ "$STATUS" == "000" ]; then
        echo "  Status: ‚ùå FALHA (Sem Conex√£o ou Timeout)"
        echo "  Problema: API de Rede do Sistema n√£o est√° respondendo. Verifique Wi-Fi/Dados M√≥veis."
    else
        echo "  Status: ‚ö†Ô∏è ALERTA (Resposta inesperada HTTP $STATUS)"
    fi
else
    echo "  Status: ‚ùå FALHA (Ferramenta 'curl' n√£o instalada no Termux)"
fi
echo "--------------------------------------------------------"


# --- 3. VERIFICA√á√ÉO DO ESTADO DA BATERIA (API de Energia) ---
echo -e "\n[3] Estado da Bateria (API de Energia)"
# Acessa o estado da bateria via /sys/class/power_supply (comum no Android)
POWER_PATH="/sys/class/power_supply/battery"

if [ -d "$POWER_PATH" ]; then
    CAPACITY=$(cat "$POWER_PATH/capacity" 2>/dev/null)
    STATUS_BAT=$(cat "$POWER_PATH/status" 2>/dev/null)
    
    if [ ! -z "$CAPACITY" ] && [ ! -z "$STATUS_BAT" ]; then
        echo "  N√≠vel de Carga: $CAPACITY%"
        echo "  Status da API: $STATUS_BAT"
        if [ "$CAPACITY" -lt 20 ] && [ "$STATUS_BAT" != "Charging" ]; then
            echo "  Status: ‚ö†Ô∏è Bateria Baixa e Descarregando"
        else
            echo "  Status: ‚úÖ OK"
        fi
    else
        echo "  Status: ‚ùå FALHA (N√£o foi poss√≠vel ler os dados da bateria)"
    fi
else
    echo "  Status: ‚ö†Ô∏è Aviso: Caminho da API de Energia n√£o encontrado, usando m√©todo alternativo."
    # Poderia usar 'termux-battery-status' se a permiss√£o 'termux-api' estivesse instalada
fi
echo "--------------------------------------------------------"

